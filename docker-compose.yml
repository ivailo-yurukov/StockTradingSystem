services:
  # === PostgreSQL for OrderService ===
  postgres-order:
    image: postgres:16
    container_name: postgres-order
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: ordersdb
    ports:
      - "5433:5432"
    volumes:
      - postgres_order_data:/var/lib/postgresql/data

  # === PostgreSQL for PortfolioService ===
  postgres-portfolio:
    image: postgres:16
    container_name: postgres-portfolio
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: portfoliodb
    ports:
      - "5434:5432"
    volumes:
      - postgres_portfolio_data:/var/lib/postgresql/data

  # === RabbitMQ ===
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # === OrderService ===
  order-service:
    build:
      context: .
      dockerfile: OrderService/Dockerfile
    container_name: order-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-order:
        condition: service_started
    environment:
      ConnectionStrings__Default: "Host=postgres-order;Port=5432;Database=ordersdb;Username=postgres;Password=postgres"
      RabbitMQ__Host: "rabbitmq"
      ASPNETCORE_URLS: "http://+:80"
    ports:
      - "5001:80"

  # === PortfolioService ===
  portfolio-service:
    build:
      context: .
      dockerfile: PortfolioService/Dockerfile
    container_name: portfolio-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres-portfolio:
        condition: service_started
    environment:
      ConnectionStrings__Default: "Host=postgres-portfolio;Port=5432;Database=portfoliodb;Username=postgres;Password=postgres"
      RabbitMQ__Host: "rabbitmq"
      ASPNETCORE_URLS: "http://+:80"
    ports:
      - "5002:80"

  # === PriceService ===
  price-service:
    build:
      context: .
      dockerfile: PriceService/Dockerfile
    container_name: price-service
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RabbitMQ__Host: "rabbitmq"
      ASPNETCORE_URLS: "http://+:80"
    ports:
      - "5003:80"

  # === API Gateway ===
  api-gateway-service:
    build:
      context: .
      dockerfile: ApiGatewayService/Dockerfile
    container_name: api-gateway-service
    depends_on:
      order-service:
        condition: service_started
      portfolio-service:
        condition: service_started
      price-service:
        condition: service_started
    environment:
      ASPNETCORE_URLS: "http://+:80"
    ports:
      - "5000:80"

volumes:
  postgres_order_data:
  postgres_portfolio_data:
  rabbitmq_data:
